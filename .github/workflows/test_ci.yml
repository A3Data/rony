# CI for testing package internal code

name: Test package

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  test_and_lint:
    name: Test and Lint Modules
    runs-on: ubuntu-latest
    container: ronya3data/rony-ci:0.0.1-terraform1.0.3
    steps:
      - uses: actions/checkout@v2
      - name: test and lint
        run: |
          chmod -R +x ./CI/scripts
          ./CI/scripts/test_and_lint.sh

  terraform_validate:
    name: Terraform validation
    runs-on: ubuntu-latest
    container: ronya3data/rony-ci:0.0.1-terraform1.0.3
    steps:
      - uses: actions/checkout@v2
      - name: test and lint
        run: |
          chmod -R +x ./CI/scripts
          ./CI/scripts/validate_terraform.sh

  package_install:
    name: Test package install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install .
      - name: Test with pytest
        run: |
          cd rony/tests
          coverage run -m pytest && coverage report -m
      - name: Create project
        run: |
          rony new teste -y

  package_install_windows:
    strategy:
      matrix:
        os: [windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install package
        run: |
          python -m venv venv3
          pip install .
      - name: Create project
        run: |
          rony new teste -y
