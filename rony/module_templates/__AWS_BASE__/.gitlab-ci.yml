image:
  name: amd64/ubuntu:latest
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    - 'AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}'
    - 'AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}'

variables:
  COMMAND_IAC: terraform #terraform/terragrunt
  BUCKET: "my-bucket"
  REGION: "xx-xxxx-x"

cache:
  paths:
    - /builds/$CI_PROJECT_PATH/infrastructure/.terraform

before_script:
  - apt-get -qy update && apt-get -qy install curl python3.8 python3-pip zip
  - curl -sS -L -O https://releases.hashicorp.com/terraform/0.14.5/terraform_0.14.5_linux_amd64.zip && unzip terraform_0.14.5_linux_amd64.zip && mv terraform /usr/local/bin/terraform && chmod u+x /usr/local/bin/terraform
  - curl -sS -L -O https://github.com/gruntwork-io/terragrunt/releases/download/v0.28.2/terragrunt_linux_amd64 && mv terragrunt_linux_amd64 /usr/local/bin/terragrunt && chmod u+x /usr/local/bin/terragrunt
  - ln -s python3 /usr/bin/python && ln -s pip3 /usr/bin/pip

stages:
  - test
  - plan
  - build

test-lambda:
  stage: test
  script:
    - pip install -U pip
    - pip install -r requirements.txt
    - pip install pytest boto3
    - python -m pytest
  only:
    - branches

test-iac:
  stage: test
  script:
    - sh scripts/build_lambda_package.sh
    - cd infrastructure
    - $COMMAND_IAC init
    - $COMMAND_IAC validate
  only:
    - branches

plan:
  stage: plan
  script:
    - sh scripts/build_lambda_package.sh
    - cd infrastructure
    - $COMMAND_IAC init
    - $COMMAND_IAC plan
  only:
    - merge_requests

build:
  stage: build
  script:
    - sh scripts/build_lambda_package.sh
    - cd infrastructure
    - $COMMAND_IAC init
    - $COMMAND_IAC plan
  only:
    - master